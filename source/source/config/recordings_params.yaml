# Parameters for recording generation

spiketrains:
  # Parameters for spike train generation (spiketrain_gen.py)

  # spike train generation parameters

  # individual spike trains rates
  # average firing rate in Hz [exc, inh]
  rates: [2.710943981980033, 2.98637729420835, 2.651185633574579, 1.9705207588292226, 0.6562462115953012, 2.784322418821026, 1.0566121420810186, 1.2407364656388447, 2.7630309254116114, 2.8453636235664836, 1.9835285655526875, 2.6962088910081428, 0.9049320466682127, 2.1087181928543783, 0.8011649408627817, 1.0713581034947572, 1.1272174248046245, 1.0382794955217687, 2.212288801550992, 0.8240388456900858, 0.8412205298582618, 1.5892368818010718, 2.503038978816887, 2.1021050177434937, 1.8234538122908737, 1.6719391535977057, 2.9455356658234377, 1.264530046097046, 2.3410129927149255, 1.36685192658989, 1.6249818288185636, 2.704871558344924, 2.7178378159857473, 1.2034094269307132, 1.599930664832824, 0.8382674426960344, 1.0107883744176864, 1.0478354396595826, 2.2543208729493545, 2.1383875900277065, 2.126404823654386, 1.0207235382633302, 0.8157788886519503, 0.9335562743399107, 0.859924924236773, 0.5842429048467073, 2.0716621702864337, 1.7287712918722613, 1.3980037021330514, 1.676707183901907, 1.3133311440978606, 0.5171788097972267, 0.5668891298211425, 2.565488621818597, 2.2470849166109703, 0.8064142693123184, 2.716214100255169, 1.6218337595329186, 0.6300221489861821, 0.7678062249194046, 1.2973268496636032, 1.558555275900672, 1.6844141655695841, 0.8326265579633922, 1.199805946130555, 0.9207497628314272, 1.0766183628803292, 0.7414796937204405, 0.7032410993604028, 0.5701699611689279, 0.6515406740863137, 0.8103837702835044, 1.8624961630393309, 2.2259093032413846, 1.3594334203512424, 2.589253217783917, 1.6814002820367695, 2.630452721601104, 1.648385809238218, 1.9779261742803165, 2.9225500539143967, 1.7470636166422413, 2.6947912347156024, 2.1558087092784035, 1.0482271071294913, 2.723638536292973, 1.7921888888056607, 1.1452112763140065, 0.5767767385545237, 1.4573648170228133, 2.634402887840578, 2.7374482160464115, 1.422359961421254, 1.816544755299108, 2.6178964161510483, 1.1852007634933277, 2.2125659203765493, 0.8040027264580416, 2.9858384043426676, 0.9121832393507365, 1.2031342766798752, 2.4435684752520355, 1.3561795542421335, 1.8562090972183691, 2.570154628237751, 0.5435700519491472, 0.8441278293669986, 1.4850165300474691, 2.893092120368226, 1.8682335380458586, 1.5315969836767105, 2.1825585156695064, 2.839954125668163, 2.8011306633148947, 1.1510457882846377, 0.5901862150553709, 0.6336026362098905, 1.17531007370952, 1.7595032628443739, 2.152779143937486, 1.296058014913129, 0.621740235464268, 0.9482686210104775, 0.8532845093261006, 1.3345152124359625, 2.6930829873575477, 1.1978347173278074, 1.6302852719081167, 2.5987125289979334, 1.098047193298785, 2.061943516602044, 1.1198870523337123, 0.5403596393495984, 2.3506101161562385, 1.8655402850841534, 1.7609426983756675, 0.5152514207865345, 0.6689878009768844, 2.0792030581027374, 2.1367457003054238, 2.660210683158913, 2.9884417838086197, 1.41991233396135, 0.9976252766476643, 1.1101021521789098, 2.0670821037732674, 1.4387310870533618, 2.9837495069376017, 2.0475357262822884, 2.7025301609487866, 2.519985539746113, 0.7605312438105436, 2.9750566592982315, 2.1257582776085235, 2.545847658994771, 1.0673891336523929, 1.0384675105430003, 2.1306115471573968, 2.517537083725273, 0.8931638158266861, 1.120503884441165, 2.9779187940156, 1.430085887627364, 2.2540724855424408, 2.3638662092812526, 2.885224663337084, 1.0442031299671144, 1.4875603214640574, 1.4093374655811473, 2.7800370571381583, 1.972060207874618, 2.1494170873480356, 2.1975311942813267, 2.488394548119102, 2.6036080545177134, 1.4066328418631517, 0.6110405013505827, 1.3244477049530854, 2.860906658114019, 0.7174006627882716, 1.3392758673746181, 2.7471417682159136, 1.1978800950595996, 1.9812131811819975, 2.134319495718407, 2.3259126089808007, 1.6395199253929198, 2.814009003457385, 2.441130267681054, 0.5381343025555883, 0.6320342960017105, 1.465706488013898, 2.4510429089297228, 2.7197946947360387, 1.2120899707161237, 1.6917889856152586, 2.7943553215466235, 2.392721183176113, 2.118369475572741, 0.9241034697829199] # 200 numbers computed using [random.uniform(0.5, 3) for _ in range(200)]
  # individual spike trains class (exc-inh)
  types: ['E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'I', 'I', #10
          'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'I', 'I', #20
          'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'I', 'I', #30
          'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'I', 'I', #40
          'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'I', 'I', #50
          'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'I', 'I', #60
          'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'I', 'I', #70
          'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'I', 'I', #80
          'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'I', 'I', #90
          'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'I', 'I', #100
          'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'I', 'I', #110
          'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'I', 'I', #120
          'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'I', 'I', #130
          'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'I', 'I', #140
          'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'I', 'I', #150
          'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'I', 'I', #160
          'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'I', 'I', #170
          'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'I', 'I', #180
          'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'I', 'I', #190
          'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'I', 'I'] #200
  # alternative to rates - excitatory and inhibitory settings
  #n_exc: 7 # number of excitatory cells
  #n_inh: 3 # number of inhibitory cells
  #f_exc: 5 # average firing rate of excitatory cells in Hz
  #f_inh: 15 # average firing rate of inhibitory cells in Hz
  #st_exc: 1 # firing rate standard deviation of excitatory cells in Hz
  #st_inh: 3 # firing rate standard deviation of inhibitory cells in Hz
  #min_rate: 0.5 # minimum firing rate in Hz
  ref_per: 2 # refractory period in ms
  process: poisson # process for spike train simulation (poisson-gamma)
  gamma_shape: 2 # gamma shape (for gamma process)
  t_start: 0 # start time in s
  duration: 1800 # duration in s (1800 s == 30 min)

cell_types:
  # excitatory and inhibitory cell names (overwrite if using custom models)
  excitatory: ['PC', 'SS', 'SP']
  inhibitory: ['AC', 'BP', 'BC', 'BTC', 'ChC', 'DBC', 'MC', 'NGC']

seeds:
  spiketrains: null # random seed for spiketrain generation
  templates: 42 # random seed for template selection
  convolution: null # random seed for jitter selection in convolution
  noise: null # random seed for noise

templates:
  # recording generation parameters
  min_dist: 25 # minimum distance between neurons
  min_amp: 50 # minimum spike amplitude in uV
  max_amp: 300 # maximum spike amplitude in uV
  n_overlap_pairs: null # number of spatially overlapping templates
  xlim: null # limits for neuron depths (x-coord) in um [min, max]
  ylim: null # limits for neuron depths (y-coord) in um [min, max]
  zlim: null # limits for neuron depths (z-coord) in um [min, max]
  overlap_threshold: 0.9 # threshold to consider two templates spatially overlapping
  # (e.g 0.9 -> 90% of template B on largest electrode of template A)
  n_jitters: 10 # number of temporal jittered copies for each eap
  upsample: 8 # upsampling factor to extract jittered copies
  pad_len: [3, 3] # padding of templates in ms
  smooth_percent: 0.5 # percent of pad_len used to smooth with sigmoid. If 0, no extra smoothing is performed
  smooth_strength: 1 # exponent of sigmoid function for smoothing

recordings:
  fs: null # sampling frequency in Hz (if null it is computed form the templates)
  dtype: float32 # dtype of generated recordings
  adc_bit_depth: null # if dtype is int, the number of bit of the ADC
  lsb: null # if dtype is int, the int16 lsb. lsb and adc_bit_depth will determine the signal range (if gain is null)
  gain: null # the gain to convert the signals to uV. If given, the adc_bit_depth is ignored.
  overlap: False # if True, temporal and spatial overlap are computed for each spike (it may be time consuming)
  extract_waveforms: False # if True, waveforms are extracted from recordings
  sync_rate: null # added synchrony rate for spatially overlapping templates
  sync_jitt: 1 # jitter in ms for added spikes
  chunk_duration: 10 # chunk duration for convolution, noise, and filter

  modulation: electrode # type of spike modulation [none (no modulation) |
    # template (each spike instance is modulated with the same value on each electrode) |
    # electrode (each electrode is modulated separately)]
  sdrand:  0.05 # standard deviation of gaussian modulation
  bursting: False # if True, spikes are modulated in amplitude depending on the isi and in shape (if shape_mod is True)
  bursting_units: null # if not None, list to indicate which units should be bursting
  exp_decay: 0.2 # with bursting modulation experimental decay in amplitude between consecutive spikes
  n_burst_spikes: 10 # max number of 'bursting' consecutive spikes
  max_burst_duration: 100 # duration in ms of maximum burst modulation
  shape_mod: False # if True waveforms are modulated in shape with a low pass filter depending on the isi
  shape_stretch: 30.  # parameter that controls the amount of shape modulation (higher values -> higher stretch)
  n_bursting: null  # number of bursting units

  noise_level: 10 # noise standard deviation in uV
  noise_mode: far-neurons # [uncorrelated | distance-correlated | far-neurons]
  noise_color: True # if True noise is colored resembling experimental noise
  noise_half_distance: 30 # (distance-correlated noise) distance between electrodes in um for which correlation is 0.5
  far_neurons_n: 300 # number of far noisy neurons to be simulated
  far_neurons_max_amp: 10 # maximum amplitude of far neurons
  far_neurons_noise_floor: 0.5 # percent of random noise
  far_neurons_exc_inh_ratio: 0.8 # excitatory / inhibitory noisy neurons ratio
  color_peak: 300 # (color) peak / curoff frequency of resonating filter
  color_q: 2 # (color) quality factor of resonating filter
  color_noise_floor: 1 # (color) additional noise floor

  filter: True # if True it filters the recordings
  filter_cutoff: [300, 6000] # filter cutoff frequencies in Hz
  filter_order: 3 # filter order
  filter_mode: filtfilt # filter mode (filtfilt, lfilter)

  drifting: True # if True templates are drifted
  # these params are shared across multiple drift signals
  n_drifting: 200 # number of drifting units
  preferred_dir: [0, 0, 1]  # preferred drifting direction ([0,0,1] is positive z, direction)
  angle_tol: 15  # tolerance for direction in degrees
  # these params specify one drift signal
  drift_mode_speed: slow # drifting mode can be ['slow', 'fast']
  drift_mode_probe: rigid # ['rigid', 'non-rigid']
  drift_fs: 100 # sampling frequency of drift signal in Hz
  non_rigid_gradient_mode: linear # ['linear'] how the gradient on drift is applied on the prefered_dir. linear is 0->max velocity from up to bottom.
  non_rigid_linear_min_factor: 0.5 # minimum factor of velocity for the neurons
  non_rigid_linear_direction: 1 # the non rigid direction: if 1, non rigid drift is from bottom to top, if -1 is the opposite
  non_rigid_step_depth_boundary: 10 # if not None, the depth in um at which the non rigid drift changes direction
  non_rigid_step_factors: 10 # if not None, the factors of velocity for the non rigid drift
  slow_drift_velocity: 5  # drift velocity in um/min.
  slow_drift_amplitude: 10  # Amplitude of drifts in um. If None, the maximum available value based on the drifting templates is used.
  slow_drift_waveform: sine  # 'triangluar' or 'sine'
  fast_drift_period: 10  # period between fast drift events
  fast_drift_max_jump: 20 # maximum 'jump' in um for fast drifts
  fast_drift_min_jump: 5 # minimum 'jump' in um for fast drifts
  t_start_drift: 0  # time in s when drifting starts
  t_end_drift: null  # time in s when drifting stops
